<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbw.lottery.infrastructure.dao.IActivityDao">

    <resultMap id="activityMap" type="com.xbw.lottery.infrastructure.po.Activity">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="activityId" column="activity_id" jdbcType="BIGINT"/>
        <result property="activityName" column="activity_name" jdbcType="VARCHAR"/>
        <result property="activityDesc" column="activity_desc" jdbcType="VARCHAR"/>
        <result property="strategyId" column="strategy_id" jdbcType="BIGINT"/>
        <result property="beginDateTime" column="begin_date_time" jdbcType="TIMESTAMP"/>
        <result property="endDateTime" column="end_date_time" jdbcType="TIMESTAMP"/>
        <result property="stockCount" column="stock_count" jdbcType="INTEGER"/>
        <result property="stockSurplusCount" column="stock_surplus_count" jdbcType="INTEGER"/>
        <result property="takeCount" column="take_count" jdbcType="INTEGER"/>
        <result property="activityState" column="activity_state" jdbcType="INTEGER"/>
        <result property="creator" column="creator" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <insert id="insert" parameterType="com.xbw.lottery.infrastructure.po.Activity">
        INSERT INTO activity
        (activity_id, activity_name, activity_desc, begin_date_time, end_date_time,
         stock_count, stock_surplus_count, take_count, strategy_id, activity_state, creator, create_time, update_time)
        VALUES
            (#{activityId}, #{activityName}, #{activityDesc},#{beginDateTime}, #{endDateTime},
             #{stockCount}, #{stockSurplusCount}, #{takeCount}, #{strategyId}, #{activityState}, #{creator}, now(), now())
    </insert>

    <update id="alterState" parameterType="com.xbw.lottery.domain.activity.model.vo.AlterStateVO">
        UPDATE activity
        SET activity_state = #{afterState}
        WHERE activity_id = #{activityId} AND activity_state = #{beforeState}
    </update>

    <select id="queryActivityById" parameterType="java.lang.Long" resultMap="activityMap">
        SELECT activity_id, activity_name, activity_desc, begin_date_time, end_date_time,
               stock_count, stock_surplus_count, take_count, strategy_id, activity_state, creator, create_time, update_time
        FROM activity
        WHERE activity_id = #{activityId}
    </select>

    <update id="subtractionActivityStock" parameterType="java.lang.Long">
        UPDATE activity SET stock_surplus_count = stock_surplus_count - 1
        WHERE activity_id = #{activityId} AND stock_surplus_count > 0
    </update>

    <select id="scanToDoActivityList" parameterType="java.lang.Long" resultMap="activityMap">
        SELECT activity_id, activity_name, begin_date_time, end_date_time, activity_state, creator
        FROM activity
        WHERE id > #{activityId} AND activity_state in (4,5)
        ORDER BY id ASC
        LIMIT 10
    </select>

    <update id="updateActivityStock" parameterType="com.xbw.lottery.infrastructure.po.Activity">
        UPDATE activity SET stock_surplus_count = #{stockSurplusCount}
        WHERE activity_id = #{activityId} AND stock_surplus_count > #{stockSurplusCount}
    </update>

</mapper>
